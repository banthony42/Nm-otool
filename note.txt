********************************************************************************

                                                          :::      ::::::::
     note.txt                                           :+:      :+:    :+:
                                                      +:+ +:+         +:+
     By: banthony <banthony@student.42.fr>          +#+  +:+       +#+
                                                  +#+#+#+#+#+   +#+
     Created: 2017/10/07 18:40:03 by banthony          #+#    #+#
     Updated: 2017/12/06 00:15:47 by banthony         ###   ########.fr         

********************************************************************************



Issue:
	libmlx.a (/usr/share/local/lib/) - probleme sur __bss
	Bon debut sur CIGAM, voir swap au niveau des get_symtype
	cat a.out | ft_nm -  (lecture sur entree standard) feat simon
	test.a - archive avec un fichier vide, ne pas return pour ca feat simon
	fucking_bomb - otool - feat simon
	return 2 fichier 3 octets, unifier les return, en general 1 par convention sur erreur - feat simon
	check de fichier corrompu lors du parcours de la stringtable ! feat simon

Todo:
	option "-arch all", trouver un caractere pour le gerer rapidement -z ?
	pour tester le cigam x32 /usr/bin/audiodevice
	ajouter des protection fichier corrompu sur les symtype_handler

Sur un fichier sans droit, l'erreur pop sur open
	-> No such file or directory.	  au lieu de
	-> Permission denied.


Pour recuperer le cpusubtype, il faut utiliser un masque:
(frh->cpusubtype & ~CPU_SUBTYPE_MASK)


Variable a recuperer (nm):
		 symbol table
		 		symbol name
				value of the symbol name
				symbol type of the value

$> nm ./test/a.out
0000000100000000 T __mh_execute_header
0000000100000f50 T _main
                 U _write
                 U dyld_stub_binder
---------------.---.--------------------
		|		 |			|
		|		 |			|
	Value		Type	  Symbol Name


	Memoriser l'offset de la premiere structure section, pour les types ?

	Pour les CIGAM, se faire une fonction swap_if_cigam(magic, data) ?

	Les options de tri, agissent uniquement sur les liste de symboles (t_list)
	pas sur la liste de fichier (t_data)


  Options		    fichier 1           fichier 2	      fichier n	   Fin liste des fichiers
----------------|-----------------|-----------------|-----------------|
[struct t_data]-->[struct t_data]-->[struct t_data]-->[struct t_data]-->NULL
	|				|				   		|				|
	| 				|						|				|-->[struct t_list]-->...->NULL
	|				|						|
	|-->NULL		|						|
					|						|
					|						|-->[struct t_list]-->[struct t_list]-->NULL
					|
					|
					|
					|
					|-->[struct t_list]-->[struct t_list ]-->[struct t_list]-->NULL
								|
								|-->value
								|
								|-->type
								|
								|-->symbol name





Pour N_SECT, ptr_first_section + (sizeof(section) * n_sect) ne marche pas, car il y a des struct segment au milieu


Arrangement en memoire des LC_SEGMENT et sections

-----------------------------------
|	- LC_SEGMENT_64				  |
|	- n_sect = 3				  |
----------------------------------- s = sizeof(LC_SEGMENT_64)
-----------------------------------
|	- section_64				  |
|								  |
----------------------------------- s += sizeof(section_64)
-----------------------------------
|	- section_64				  |
|								  |
----------------------------------- s += sizeof(section_64)
-----------------------------------
|	- section_64				  |
|								  |
----------------------------------- s += sizeof(section_64)
-----------------------------------
|	- LC_SEGMENT_64				  |
|	- n_sect = 2				  |
----------------------------------- s = sizeof(LC_SEGMENT_64)
-----------------------------------
|	- section_64				  |
|								  |
----------------------------------- s += sizeof(section_64)
-----------------------------------
|	- section_64				  |
|								  |
----------------------------------- s += sizeof(section_64)


-------------------------------------------------------------------------------
Structure Universal Binaries (Fat files):
-----------------------------------
|	- Fat Header				  |
|	- Fat Arch					  |
-----------------------------------
-----------------------------------
|	- Mach-O Header				  |
|								  |
-----------------------------------
-----------------------------------
|	- Load Commands				  |
|								  |
-----------------------------------
-----------------------------------
|	- Data						  |
|								  |
-----------------------------------

Structure Mach-O Files:
-----------------------------------
|	- Mach-O Header				  |
|								  |
-----------------------------------
-----------------------------------
|	- Load Commands				  |
|								  |
-----------------------------------
-----------------------------------
|	- Data						  |
|								  |
-----------------------------------


Structure Archive (build with ar, example with an archive composed of 4 object file):
----------------------------------
|	- char [8]magic -> "!<arch>\n"|
-----------------------------------
-----------------------------------
|	- struct ar_hdr				  |
|	- Mach-O					  |
-----------------------------------
-----------------------------------
|	- struct ar_hdr				  |
|	- Mach-O					  |
-----------------------------------
-----------------------------------
|	- struct ar_hdr				  |
|	- Mach-O					  |
-----------------------------------
-----------------------------------
|	- struct ar_hdr				  |
|	- Mach-O					  |
-----------------------------------
